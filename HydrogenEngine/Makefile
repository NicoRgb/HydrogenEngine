# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_x86_64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
INCLUDES += -IInclude -I../Extern/spdlog/include -I../Extern/glm -I../Extern/json/single_include/nlohmann -I../Extern/imgui-docking -I../../../VulkanSDK/1.4.321.0/macOS/include -I../Extern/GLFW/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_x86_64)
TARGETDIR = ../bin/Debug-macosx-x86_64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Debug-macosx-x86_64/x86_64/Debug/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS -DHY_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -std=c++20
LIBS += -lvulkan -lglfw3 -lshaderc_shared
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -m64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

else ifeq ($(config),debug_arm64)
TARGETDIR = ../bin/Debug-macosx-ARM64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Debug-macosx-ARM64/arm64/Debug/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS -DHY_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O0 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O0 -g -std=c++20
LIBS += -lvulkan -lglfw3 -lshaderc_shared
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

else ifeq ($(config),release_x86_64)
TARGETDIR = ../bin/Release-macosx-x86_64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Release-macosx-x86_64/x86_64/Release/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS -DHY_NDEBUG -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -g -std=c++20
LIBS += -lvulkan -lglfw3 -lshaderc_shared
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -m64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

else ifeq ($(config),release_arm64)
TARGETDIR = ../bin/Release-macosx-ARM64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Release-macosx-ARM64/arm64/Release/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS -DHY_NDEBUG -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2 -g -std=c++20
LIBS += -lvulkan -lglfw3 -lshaderc_shared
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

else ifeq ($(config),dist_x86_64)
TARGETDIR = ../bin/Dist-macosx-x86_64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Dist-macosx-x86_64/x86_64/Dist/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS -DHY_DIST -DHY_NDEBUG -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20
LIBS += -lvulkan -lglfw3 -lshaderc_shared
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -m64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

else ifeq ($(config),dist_arm64)
TARGETDIR = ../bin/Dist-macosx-ARM64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Dist-macosx-ARM64/arm64/Dist/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS -DHY_DIST -DHY_NDEBUG -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2 -std=c++20
LIBS += -lvulkan -lglfw3 -lshaderc_shared
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

else ifeq ($(config),debug-noimgui_x86_64)
TARGETDIR = ../bin/Debug-NoImGui-macosx-x86_64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Debug-NoImGui-macosx-x86_64/x86_64/Debug-NoImGui/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -std=c++20
LIBS += -lvulkan -lglfw3
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -m64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

else ifeq ($(config),debug-noimgui_arm64)
TARGETDIR = ../bin/Debug-NoImGui-macosx-ARM64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Debug-NoImGui-macosx-ARM64/arm64/Debug-NoImGui/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS)
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -std=c++20
LIBS += -lvulkan -lglfw3
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

else ifeq ($(config),release-noimgui_x86_64)
TARGETDIR = ../bin/Release-NoImGui-macosx-x86_64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Release-NoImGui-macosx-x86_64/x86_64/Release-NoImGui/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -std=c++20
LIBS += -lvulkan -lglfw3
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -m64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

else ifeq ($(config),release-noimgui_arm64)
TARGETDIR = ../bin/Release-NoImGui-macosx-ARM64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Release-NoImGui-macosx-ARM64/arm64/Release-NoImGui/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS)
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -std=c++20
LIBS += -lvulkan -lglfw3
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

else ifeq ($(config),dist-noimgui_x86_64)
TARGETDIR = ../bin/Dist-NoImGui-macosx-x86_64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Dist-NoImGui-macosx-x86_64/x86_64/Dist-NoImGui/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -std=c++20
LIBS += -lvulkan -lglfw3
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -m64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

else ifeq ($(config),dist-noimgui_arm64)
TARGETDIR = ../bin/Dist-NoImGui-macosx-ARM64
TARGET = $(TARGETDIR)/libHydrogenEngine.a
OBJDIR = ../bin-int/Dist-NoImGui-macosx-ARM64/arm64/Dist-NoImGui/HydrogenEngine
DEFINES += -DHY_WITH_IMGUI -DHY_SYSTEM_MACOS
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS)
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -std=c++20
LIBS += -lvulkan -lglfw3
ALL_LDFLAGS += $(LDFLAGS) -L../../../VulkanSDK/1.4.321.0/macOS/lib -L../Extern/GLFW/lib-arm64 -rpath $(HOME)/VulkanSDK/1.4.321.0/macOS/lib

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Application.o
GENERATED += $(OBJDIR)/AssetManager.o
GENERATED += $(OBJDIR)/CommandQueue.o
GENERATED += $(OBJDIR)/DebugGUI.o
GENERATED += $(OBJDIR)/Framebuffer.o
GENERATED += $(OBJDIR)/IndexBuffer.o
GENERATED += $(OBJDIR)/Logger.o
GENERATED += $(OBJDIR)/MacOSViewport.o
GENERATED += $(OBJDIR)/Pipeline.o
GENERATED += $(OBJDIR)/RenderAPI.o
GENERATED += $(OBJDIR)/RenderContext.o
GENERATED += $(OBJDIR)/RenderPass.o
GENERATED += $(OBJDIR)/Renderer.o
GENERATED += $(OBJDIR)/Texture.o
GENERATED += $(OBJDIR)/VertexBuffer.o
GENERATED += $(OBJDIR)/Viewport.o
GENERATED += $(OBJDIR)/VulkanCommandQueue.o
GENERATED += $(OBJDIR)/VulkanDebugGUI.o
GENERATED += $(OBJDIR)/VulkanFramebuffer.o
GENERATED += $(OBJDIR)/VulkanIndexBuffer.o
GENERATED += $(OBJDIR)/VulkanPipeline.o
GENERATED += $(OBJDIR)/VulkanRenderAPI.o
GENERATED += $(OBJDIR)/VulkanRenderContext.o
GENERATED += $(OBJDIR)/VulkanRenderPass.o
GENERATED += $(OBJDIR)/VulkanTexture.o
GENERATED += $(OBJDIR)/VulkanVertexBuffer.o
GENERATED += $(OBJDIR)/WindowsViewport.o
GENERATED += $(OBJDIR)/imgui.o
GENERATED += $(OBJDIR)/imgui_draw.o
GENERATED += $(OBJDIR)/imgui_impl_glfw.o
GENERATED += $(OBJDIR)/imgui_impl_vulkan.o
GENERATED += $(OBJDIR)/imgui_tables.o
GENERATED += $(OBJDIR)/imgui_widgets.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/AssetManager.o
OBJECTS += $(OBJDIR)/CommandQueue.o
OBJECTS += $(OBJDIR)/DebugGUI.o
OBJECTS += $(OBJDIR)/Framebuffer.o
OBJECTS += $(OBJDIR)/IndexBuffer.o
OBJECTS += $(OBJDIR)/Logger.o
OBJECTS += $(OBJDIR)/MacOSViewport.o
OBJECTS += $(OBJDIR)/Pipeline.o
OBJECTS += $(OBJDIR)/RenderAPI.o
OBJECTS += $(OBJDIR)/RenderContext.o
OBJECTS += $(OBJDIR)/RenderPass.o
OBJECTS += $(OBJDIR)/Renderer.o
OBJECTS += $(OBJDIR)/Texture.o
OBJECTS += $(OBJDIR)/VertexBuffer.o
OBJECTS += $(OBJDIR)/Viewport.o
OBJECTS += $(OBJDIR)/VulkanCommandQueue.o
OBJECTS += $(OBJDIR)/VulkanDebugGUI.o
OBJECTS += $(OBJDIR)/VulkanFramebuffer.o
OBJECTS += $(OBJDIR)/VulkanIndexBuffer.o
OBJECTS += $(OBJDIR)/VulkanPipeline.o
OBJECTS += $(OBJDIR)/VulkanRenderAPI.o
OBJECTS += $(OBJDIR)/VulkanRenderContext.o
OBJECTS += $(OBJDIR)/VulkanRenderPass.o
OBJECTS += $(OBJDIR)/VulkanTexture.o
OBJECTS += $(OBJDIR)/VulkanVertexBuffer.o
OBJECTS += $(OBJDIR)/WindowsViewport.o
OBJECTS += $(OBJDIR)/imgui.o
OBJECTS += $(OBJDIR)/imgui_draw.o
OBJECTS += $(OBJDIR)/imgui_impl_glfw.o
OBJECTS += $(OBJDIR)/imgui_impl_vulkan.o
OBJECTS += $(OBJDIR)/imgui_tables.o
OBJECTS += $(OBJDIR)/imgui_widgets.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking HydrogenEngine
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning HydrogenEngine
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/imgui_impl_glfw.o: ../Extern/imgui-docking/backends/imgui_impl_glfw.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_impl_vulkan.o: ../Extern/imgui-docking/backends/imgui_impl_vulkan.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui.o: ../Extern/imgui-docking/imgui.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_draw.o: ../Extern/imgui-docking/imgui_draw.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_tables.o: ../Extern/imgui-docking/imgui_tables.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_widgets.o: ../Extern/imgui-docking/imgui_widgets.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Application.o: Source/Application/Application.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/AssetManager.o: Source/Application/AssetManager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Logger.o: Source/Application/Logger.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Viewport.o: Source/Application/Viewport.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MacOSViewport.o: Source/Platform/MacOS/MacOSViewport.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanCommandQueue.o: Source/Platform/Vulkan/VulkanCommandQueue.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanDebugGUI.o: Source/Platform/Vulkan/VulkanDebugGUI.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanFramebuffer.o: Source/Platform/Vulkan/VulkanFramebuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanIndexBuffer.o: Source/Platform/Vulkan/VulkanIndexBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanPipeline.o: Source/Platform/Vulkan/VulkanPipeline.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanRenderAPI.o: Source/Platform/Vulkan/VulkanRenderAPI.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanRenderContext.o: Source/Platform/Vulkan/VulkanRenderContext.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanRenderPass.o: Source/Platform/Vulkan/VulkanRenderPass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanTexture.o: Source/Platform/Vulkan/VulkanTexture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanVertexBuffer.o: Source/Platform/Vulkan/VulkanVertexBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WindowsViewport.o: Source/Platform/Windows/WindowsViewport.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CommandQueue.o: Source/Renderer/CommandQueue.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DebugGUI.o: Source/Renderer/DebugGUI.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Framebuffer.o: Source/Renderer/Framebuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/IndexBuffer.o: Source/Renderer/IndexBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Pipeline.o: Source/Renderer/Pipeline.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderAPI.o: Source/Renderer/RenderAPI.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderContext.o: Source/Renderer/RenderContext.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderPass.o: Source/Renderer/RenderPass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: Source/Renderer/Renderer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: Source/Renderer/Texture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexBuffer.o: Source/Renderer/VertexBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif